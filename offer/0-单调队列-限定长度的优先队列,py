from collections import deque


def constrainedSubsetSum(self, nums, k: int):

        s = deque()
        s.append((nums[0], 0))
        #单调队列
        for i in range(1, len(nums)):
            while s and s[-1][0] <= nums[i]:
                s.pop()
            s.append((nums[i], i))
            if s[0][1] <= i - k:
                s.popleft()